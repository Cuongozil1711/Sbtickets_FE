[{"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\index.js":"1","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\serviceWorker.js":"2","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\LayoutContext.js":"3","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\UserContext.js":"4","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\App.js":"5","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\index.js":"6","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\urlAPI.js":"7","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\default.js":"8","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\Error.js":"9","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\Login.js":"10","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\Layout.js":"11","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\index.js":"12","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBusAddress\\NewTripBusAddress.js":"13","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js":"14","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\Widget.js":"15","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\styles.js":"16","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\styles.js":"17","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js":"18","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBusAddress\\TripBusAddressDetail.js":"19","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\LineBuses\\NewLineBus.js":"20","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\LineBuses\\LineBusDetail.js":"21","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBus.js":"22","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBusDetail.js":"23","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js":"24","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBus.js":"25","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBusDetail.js":"26","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\StatisticalCustomerBook\\StatisticalCustomerBook.js":"27","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Statistical\\Statistical.js":"28","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js":"29","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js":"30","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js":"31","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\styles.js":"32","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\Charts.js":"33","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\tables\\Tables.js":"34","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\Maps.js":"35","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js":"36","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\LineBuses\\index.js":"37","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\Typography.js":"38","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js":"39","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\index.js":"40","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\index.js":"41","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\Icons.js":"42","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBusAddress\\index.js":"43","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\index.js":"44","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\Header.js":"45","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js":"46","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\styles.js":"47","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\styles.js":"48","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\Notification.js":"49","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"50","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js":"51","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\styles.js":"52","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\utils\\index.js":"53","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js":"54","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"55","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\styles.js":"56","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js":"57","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\styles.js":"58","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\mock.js":"59","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\styles.js":"60","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\styles.js":"61","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js":"62","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js":"63","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\styles.js":"64","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"65","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"66","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js":"67","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\styles.js":"68","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\styles.js":"69"},{"size":896,"mtime":1636817473613,"results":"70","hashOfConfig":"71"},{"size":5083,"mtime":1636817473634,"results":"72","hashOfConfig":"71"},{"size":1984,"mtime":1636820318641,"results":"73","hashOfConfig":"71"},{"size":2933,"mtime":1639208971383,"results":"74","hashOfConfig":"71"},{"size":1787,"mtime":1639208390158,"results":"75","hashOfConfig":"71"},{"size":534,"mtime":1636817473635,"results":"76","hashOfConfig":"71"},{"size":2036,"mtime":1639151238435,"results":"77","hashOfConfig":"71"},{"size":3127,"mtime":1636817473635,"results":"78","hashOfConfig":"71"},{"size":1626,"mtime":1636817473620,"results":"79","hashOfConfig":"71"},{"size":4935,"mtime":1636820318643,"results":"80","hashOfConfig":"71"},{"size":7029,"mtime":1639208962380,"results":"81","hashOfConfig":"71"},{"size":821,"mtime":1639209836182,"results":"82","hashOfConfig":"71"},{"size":3923,"mtime":1639154510982,"results":"83","hashOfConfig":"71"},{"size":590,"mtime":1636820318640,"results":"84","hashOfConfig":"71"},{"size":2581,"mtime":1636817473608,"results":"85","hashOfConfig":"71"},{"size":529,"mtime":1636820318640,"results":"86","hashOfConfig":"71"},{"size":1015,"mtime":1636817473609,"results":"87","hashOfConfig":"71"},{"size":3971,"mtime":1636817473610,"results":"88","hashOfConfig":"71"},{"size":4500,"mtime":1639060135373,"results":"89","hashOfConfig":"71"},{"size":7026,"mtime":1639216261773,"results":"90","hashOfConfig":"71"},{"size":8097,"mtime":1639060135363,"results":"91","hashOfConfig":"71"},{"size":2920,"mtime":1639211442571,"results":"92","hashOfConfig":"71"},{"size":3417,"mtime":1639064126067,"results":"93","hashOfConfig":"71"},{"size":5899,"mtime":1639154289602,"results":"94","hashOfConfig":"71"},{"size":11733,"mtime":1639211263927,"results":"95","hashOfConfig":"71"},{"size":11883,"mtime":1639211276372,"results":"96","hashOfConfig":"71"},{"size":8637,"mtime":1639060135368,"results":"97","hashOfConfig":"71"},{"size":7158,"mtime":1639211387923,"results":"98","hashOfConfig":"71"},{"size":8310,"mtime":1639060135361,"results":"99","hashOfConfig":"71"},{"size":9978,"mtime":1639060135360,"results":"100","hashOfConfig":"71"},{"size":7595,"mtime":1639154331488,"results":"101","hashOfConfig":"71"},{"size":710,"mtime":1636817473599,"results":"102","hashOfConfig":"71"},{"size":6077,"mtime":1639155953094,"results":"103","hashOfConfig":"71"},{"size":2146,"mtime":1636817473632,"results":"104","hashOfConfig":"71"},{"size":1010,"mtime":1636817473627,"results":"105","hashOfConfig":"71"},{"size":14494,"mtime":1636820318645,"results":"106","hashOfConfig":"71"},{"size":2729,"mtime":1639063823121,"results":"107","hashOfConfig":"71"},{"size":4632,"mtime":1636817473633,"results":"108","hashOfConfig":"71"},{"size":16126,"mtime":1639207963221,"results":"109","hashOfConfig":"71"},{"size":2701,"mtime":1639063292038,"results":"110","hashOfConfig":"71"},{"size":2729,"mtime":1639063250904,"results":"111","hashOfConfig":"71"},{"size":391433,"mtime":1636817473624,"results":"112","hashOfConfig":"71"},{"size":2681,"mtime":1639063841763,"results":"113","hashOfConfig":"71"},{"size":5220,"mtime":1639151488944,"results":"114","hashOfConfig":"71"},{"size":10270,"mtime":1636820318639,"results":"115","hashOfConfig":"71"},{"size":4357,"mtime":1639208399184,"results":"116","hashOfConfig":"71"},{"size":1943,"mtime":1636817473631,"results":"117","hashOfConfig":"71"},{"size":4043,"mtime":1636817473598,"results":"118","hashOfConfig":"71"},{"size":3413,"mtime":1636817473600,"results":"119","hashOfConfig":"71"},{"size":4160,"mtime":1639207966229,"results":"120","hashOfConfig":"71"},{"size":1323,"mtime":1639207959701,"results":"121","hashOfConfig":"71"},{"size":1363,"mtime":1636817473605,"results":"122","hashOfConfig":"71"},{"size":319,"mtime":1639060135375,"results":"123","hashOfConfig":"71"},{"size":902,"mtime":1636817473604,"results":"124","hashOfConfig":"71"},{"size":4632,"mtime":1637398201311,"results":"125","hashOfConfig":"71"},{"size":812,"mtime":1636817473625,"results":"126","hashOfConfig":"71"},{"size":620,"mtime":1636817473606,"results":"127","hashOfConfig":"71"},{"size":3000,"mtime":1636817473619,"results":"128","hashOfConfig":"71"},{"size":4288,"mtime":1636817473618,"results":"129","hashOfConfig":"71"},{"size":389,"mtime":1636817473633,"results":"130","hashOfConfig":"71"},{"size":178,"mtime":1636817473628,"results":"131","hashOfConfig":"71"},{"size":1396,"mtime":1636817473614,"results":"132","hashOfConfig":"71"},{"size":1909,"mtime":1636817473614,"results":"133","hashOfConfig":"71"},{"size":1040,"mtime":1636817473601,"results":"134","hashOfConfig":"71"},{"size":1075,"mtime":1636817473617,"results":"135","hashOfConfig":"71"},{"size":1474,"mtime":1636817473605,"results":"136","hashOfConfig":"71"},{"size":291,"mtime":1636817473607,"results":"137","hashOfConfig":"71"},{"size":3556,"mtime":1636820318644,"results":"138","hashOfConfig":"71"},{"size":1395,"mtime":1636817473621,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"pze6jn",{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"142"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"142"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"142"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"142"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"142"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"142"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"142"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"142"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"142"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"142"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"142"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"142"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"142"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\index.js",[],["298","299"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\serviceWorker.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\LayoutContext.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\UserContext.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\App.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\index.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\urlAPI.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\default.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\Error.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\Login.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\Layout.js",["300","301","302","303"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from '@material-ui/core';\r\nimport Icon from '@mdi/react';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\nimport Drivers from \"../../pages/Drivers\";\r\nimport Bus from \"../../pages/Bus\";\r\nimport TripBusAddress from \"../../pages/TripBusAddress\";\r\nimport LineBuses from \"../../pages/LineBuses\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport DriverDetail from \"../../pages/Drivers/DriverDetail\";\r\nimport NewDriver from \"../../pages/Drivers/NewDriver\";\r\nimport BusDetail from \"../../pages/Bus/BusDetail\";\r\nimport NewBus from \"../../pages/Bus/NewBus\";\r\nimport TripBus from \"../../pages/TripBus\";\r\nimport TripBusDetail from \"../../pages/TripBus/TripBusDetail\";\r\nimport TripBusNew from \"../../pages/TripBus/TripBus\";\r\n\r\nimport LineBusDetail from \"../../pages/LineBuses/LineBusDetail\";\r\nimport NewLineBus from \"../../pages/LineBuses/NewLineBus\";\r\nimport Statistical from \"../../pages/Statistical/Statistical\";\r\nimport StatisticalCustomerBook from \"../../pages/StatisticalCustomerBook/StatisticalCustomerBook\";\r\nimport RevenueBus from \"../../pages/StatisticalRevenueBus/RevenueBus\";\r\nimport RevenueBusDetail from \"../../pages/StatisticalRevenueBus/RevenueBusDetail\";\r\nimport TripBusAddressDetail from \"../../pages/TripBusAddress/TripBusAddressDetail\";\r\nimport NewTripBusAddress from \"../../pages/TripBusAddress/NewTripBusAddress\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  const notifyError = (message) => toast.error(message);\r\n\r\n  const notifySuccess = (message) => toast.success(message);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastSuccess) {\r\n      notifySuccess(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastFail) {\r\n      notifyError(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastFail]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <ToastContainer />\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Charts} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            <Route exact path=\"/app/drivers\" component={Drivers} />\r\n            <Route exact path=\"/app/drivers/create\" component={NewDriver} />\r\n            <Route exact path=\"/app/drivers/:id\" component={DriverDetail} />\r\n            <Route exact path=\"/app/buses\" component={Bus} />\r\n            <Route exact path=\"/app/buses/create\" component={NewBus} />\r\n            <Route exact path=\"/app/buses/:id\" component={BusDetail} />\r\n            <Route exact path=\"/app/tripbus\" component={TripBus} />\r\n            <Route exact path=\"/app/tripbus/create\" component={TripBusNew} />\r\n            <Route exact path=\"/app/tripbus/:id\" component={TripBusDetail} />\r\n            <Route exact path=\"/app/lineBuses\" component={LineBuses} />\r\n            <Route exact path=\"/app/lineBuses/create\" component={NewLineBus} />\r\n            <Route exact path=\"/app/lineBuses/:id\" component={LineBusDetail} />\r\n            <Route exact path=\"/app/statistical\" component={Statistical} />\r\n            <Route exact path=\"/app/statisticalBookBus\" component={StatisticalCustomerBook} />\r\n            <Route exact path=\"/app/revenueBus\" component={RevenueBus} />\r\n            <Route exact path=\"/app/revenueBus/:id\" component={RevenueBusDetail} />\r\n\r\n            <Route exact path=\"/app/tripBusAddress\" component={TripBusAddress} />\r\n            <Route exact path=\"/app/tripBusAddress/create\" component={NewTripBusAddress} />\r\n            <Route exact path=\"/app/tripBusAddress/:id\" component={TripBusAddressDetail} />\r\n\r\n            <Route path=\"/app/ui/maps\" component={Maps} />\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          \r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_BE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Backend\r\n              </Link>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_FE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Frontend\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                href={'https://www.facebook.com/groups/371157724565461'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton aria-label=\"facebook\">\r\n                  <Icon\r\n                    path={FacebookIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                href={'https://github.com/AwesomeDracula/'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"github\"\r\n                  style={{ marginRight: -12 }}\r\n                >\r\n                  <Icon\r\n                    path={GithubIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\index.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBusAddress\\NewTripBusAddress.js",["304","305","306","307"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nconst data = {\r\n    address: \"\",\r\n};\r\n\r\nfunction NewTripBusAddress() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [formValues, setFormValues] = useState(data);\r\n\r\n    const handleSaveButton = () => {\r\n        instance.post(AppURL.createTripBusAddress, {\r\n            ...formValues,\r\n        })\r\n            .then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Trip Bus Address Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleSaveButton}\r\n                        >\r\n                            Save\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"address\"\r\n                                            name=\"address\"\r\n                                            label=\"Address\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.address}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                                <img src={\"../sm-tickets-logo.jpg\"}\r\n                                        variant=\"outlined\"\r\n                                        id=\"image\" \r\n                                        width=\"500\" height=\"420\" />\r\n                                    </Grid>\r\n                                    \r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewTripBusAddress\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\Widget.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBusAddress\\TripBusAddressDetail.js",["308","309","310","311","312","313"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nfunction TripBusAddressDetail() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const [formValues, setFormValues] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [datemain, setDateMain] = useState(\"\");\r\n    useEffect(() => {\r\n        let url = AppURL.getTripBusAddress + '/' + id;\r\n        console.log(url);\r\n        instance.get(url)\r\n            .then(res => {\r\n                if (res?.status === 200) {\r\n                    const body = res?.body;\r\n                    let data = {\r\n                        address: body?.address,\r\n                    };\r\n                    setFormValues(data);\r\n                    setDateMain(body?.dateMantain);\r\n                }\r\n\r\n            })\r\n    }, []);\r\n\r\n    const handleEditButton = () => {\r\n        if (isEditing) {\r\n            let url = AppURL.updateTripBusAddress + '/' + id;\r\n            instance.put(url, {\r\n                ...formValues,\r\n            }).then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            }).catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n        }\r\n        setIsEditing(!isEditing);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(\"name\" + e.target.name + \" \" + e.target.value)\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Trip Bus Address Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleEditButton}\r\n                        >\r\n                            {isEditing ? 'Save' : 'Edit'}\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"address\"\r\n                                            name=\"address\"\r\n                                            label=\"Address\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.address}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TripBusAddressDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\LineBuses\\NewLineBus.js",["314","315","316"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\LineBuses\\LineBusDetail.js",["317","318","319","320","321","322","323","324","325"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction LineBusDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listLocation, setlistLocation] = useState([]);\r\n\r\n  const [firstId, setFirstId] = useState(\"\");\r\n  const [lastId, setLastId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getLineBus + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            firstPoint: body?.firstPoint.id,\r\n            lastPoint: body?.lastPoint.id,\r\n            length: body?.length,\r\n            complexity: body?.complexity,\r\n          };\r\n          setFirstId(body?.firstPoint.id);\r\n          setLastId(body?.lastPoint.id);\r\n          setFormValues(data);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getLocation;\r\n    instance.get(url)\r\n      .then(res => {\r\n        console.log(firstId);\r\n        console.log(lastId);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistLocation(body);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  console.log(\"firstId \" + firstId);\r\n  console.log(\"lastId\" + lastId);\r\n  console.log(\"listLocation\" + listLocation);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateLineBus + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        firstId: parseInt(firstId),\r\n        lastId: parseInt(lastId),\r\n        length: parseInt(formValues.length),\r\n        complexity: parseInt(formValues.complexity)\r\n      })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n     setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Line Bus Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">First Point</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      value={firstId}\r\n                      onChange={(e) => setFirstId(e.target.value)}\r\n                      name=\"firstPoint\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLocation.length > 0 && listLocation.map((e) => {\r\n                            if(lastId === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.address}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Last Point</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      value={lastId}\r\n                      onChange={(e) => setLastId(e.target.value)}\r\n                      name=\"lastPoint\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLocation.length > 0 && listLocation.map((e) => {\r\n                            if(firstId === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.address}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                    <TextField\r\n                      id=\"length\"\r\n                      name=\"length\"\r\n                      label=\"Length\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.length}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"complexity\"\r\n                      name=\"complexity\"\r\n                      label=\"Complexity\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.complexity}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LineBusDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBus.js",["326","327","328","329","330"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBusDetail.js",["331","332","333","334","335"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    CircularProgress\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as AppURL from '../../services/urlAPI'\r\nimport instance from \"../../services\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button as MUIButton } from \"@material-ui/core\";\r\nconst states = {\r\n    sent: \"success\",\r\n    pending: \"warning\",\r\n    declined: \"secondary\",\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\n\r\nexport default function RevenueBus() {\r\n    const [listData, setlistData] = useState([]);\r\n    const { id } = useParams();\r\n    let history = useHistory();\r\n\r\n    const data = {\r\n        busId: \"\",\r\n        carNumber: \"\",\r\n        tripBusId: \"\",\r\n        numberGuest: \"\",\r\n        priceTrip: \"\",\r\n        timeTrip: \"\",\r\n        revenue: \"\",\r\n    };\r\n    let url = AppURL.getRevenueBuById + '/' + id;\r\n    instance.get(url)\r\n        .then(res => {\r\n\r\n            const data = res?.body.map(item => {\r\n                let labelitem = [];\r\n                const dateTime = new Date(item?.timeTrip).toLocaleString('vi-VI');\r\n                labelitem.push(item?.busId, item?.carNumber, item?.tripBusId, item?.numberGuest, item?.priceTrip, dateTime, item?.revenue);\r\n                return labelitem;\r\n            })\r\n            setlistData(data);\r\n        })\r\n        .catch(error => {\r\n            toast.error(\"Not Found\");\r\n        })\r\n\r\nconsole.log(\"listData: \" + JSON.stringify(listData));\r\n\r\nreturn (\r\n    <Grid item xs={12}>\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n                <PageTitle\r\n                    title=\"Statistical Detail Revenue Bus\"\r\n                    buttonBack={<MUIButton\r\n                        variant=\"contained\"\r\n                        size=\"medium\"\r\n                        color=\"secondary\"\r\n                        onClick={() => history.goBack()}\r\n                    >\r\n                        Back\r\n                    </MUIButton>}\r\n                />\r\n                <Widget disableWidgetMenu>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                listData ? <MUIDataTable\r\n                                    title=\"Detail Revenue Bus List\"                                   \r\n                                    data={listData}\r\n                                    columns={[\"Bus Code\", \"Car Number\", \"TripBus Code\", \"Number Guest\", \"Trip Price\", \"Trip Time\", \"Revenue\"]}\r\n                                    options={{\r\n                                        filterType: \"checkbox\",\r\n                                        draggableColumns: true,\r\n                                      }}\r\n                                /> : <CircularProgress />\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Widget>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n);\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js",["336","337","338","339","340","341","342"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  nationalId: \"\",\r\n  name: \"\",\r\n  codeLicense: \"\",\r\n  typeLicense: \"\",\r\n  address: \"\",\r\n  dob: \"2000-01-01\",\r\n  seniority: 0,\r\n  image: \"../Duong-Tuan-Anh1.jpg\",\r\n};\r\n\r\nfunction NewDriver() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createDriver, {\r\n      ...formValues,\r\n      seniority: parseInt(formValues.seniority),\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(\"name\" + e.target.name + \" \" + e.target.value)\r\n    setFormValues({\r\n      ...formValues,\r\n      image: \"../Duong-Tuan-Anh1.jpg\",\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      //value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={handleInputChange}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewDriver\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBus.js",["343","344","345","346"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBusDetail.js",["347","348","349","350","351"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\StatisticalCustomerBook\\StatisticalCustomerBook.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as AppURL from '../../services/urlAPI'\r\nimport instance from \"../../services\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Image } from \"@material-ui/icons\";\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\n\r\nexport default function StatisticalCustomerBook() {\r\n  //var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  //keys.shift(); // delete \"id\" key\r\n  const classes = useStyles();\r\n  const [listTripBus, setTripBus] = useState([]);\r\n  const [listData, setlistData] = useState([]);\r\n  const [timePicker, settimePicker] = useState(\"\");\r\n  const [selecteTripBus, setSelecteTripBus] = useState(\"\");\r\n  const [sumwages, setSumWages] = useState(0);\r\n  console.log(\"timePicker: \" + timePicker);\r\n  useEffect(() => {\r\n    let url = AppURL.getAllTripBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setTripBus(body.listTripBus);\r\n          console.log(JSON.stringify(listTripBus));\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  const data = {\r\n    driverName: \"\",\r\n    tripBusId: \"\",\r\n    scrapDateTime: \"\",\r\n    roleCar: \"\",\r\n    wages:\"\",\r\n    fixedSalary: \"\",\r\n  };\r\n\r\n  \r\n  \r\n  const searchData = () => {\r\n        if(selecteTripBus.length == 0){\r\n          toast.error(\"Please selectTripBus\");\r\n        }\r\n        else{\r\n          let url = AppURL.getTripBusCustomer + '/' + selecteTripBus;\r\n    //console.log(url);\r\n        instance.get(url)\r\n          .then(res => {\r\n\r\n            const data = res?.body.map(item => {\r\n              let labelitem = [];\r\n              labelitem.push(item?.fullName, item?.address,item?.birthday, item?.cmt,  item?.bookseat);\r\n              return labelitem;\r\n            })\r\n\r\n            if(data){\r\n              let sum = 0;\r\n              res?.body.forEach(element => {\r\n                console.log(\"element?.wages\" + element);\r\n                sum = sum + parseInt(element?.wages);\r\n                console.log(sum);\r\n              });\r\n              setSumWages(sum);\r\n            }\r\n\r\n\r\n            setlistData(data);\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"Not Found\");\r\n          })\r\n        }\r\n  }\r\n\r\n  console.log(\"listData: \" + JSON.stringify(listData));\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    \r\n    <Grid item xs={12}>\r\n    <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <PageTitle\r\n                  title=\"Booked ByCustomer\"\r\n                 />\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={3}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">LineTripBus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineTripBus\"\r\n                      name=\"driverId\"\r\n                      //value={selectedDriver}\r\n                      onChange={(e) => setSelecteTripBus(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listTripBus.length > 0 && listTripBus.map((e) => {\r\n                            return <MenuItem value={e.id}>{e.lineBus.firstPoint.address} - {e.lineBus.lastPoint.address} - {e.id}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                    \r\n                   \r\n\r\n                  </FormControl>\r\n                  \r\n                  <div className=\"MuiFormControl-root MuiTextField-root makeStyles-input-60\">\r\n                        <img src={'../laixe.jpg'}\r\n                            variant=\"outlined\"\r\n                            id=\"image\" \r\n                            width=\"200\" height=\"120\" />\r\n                      </div>\r\n\r\n                  {/* <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ marginBottom: `30px`,width: `80%`}}>\r\n                      <Grid container justify=\"flex-start\">\r\n                          <DatePicker\r\n                            variant=\"inline\"\r\n                            openTo=\"year\"\r\n                            views={[\"year\", \"month\"]}\r\n                            label=\"Year and Month\"\r\n                            helperText=\"Start from year selection\"\r\n                            value={timePicker}\r\n                            onChange={(e) => {\r\n                              //console.log(e.target.value);\r\n                              settimePicker(e.getFullYear() + \"-\" +e.getMonth());\r\n                            }}\r\n                          />\r\n                      </Grid>\r\n                    </MuiPickersUtilsProvider> */}\r\n                  {/* <TextField\r\n                      id=\"dob\"\r\n                      //label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      //value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      \r\n                      //type=\"variant\"\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        settimePicker(e.target.value)\r\n                      }}\r\n                      variant=\"outlined\"\r\n                    /> */}\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    onClick={searchData}\r\n                    style={{ marginTop: `30px`,width: `80%`}}\r\n                  >\r\n                     Search BookedSeat\r\n                    </Button>\r\n                \r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n\r\n                            {\r\n                      listData ? <MUIDataTable\r\n                        title=\"List Booked TripBus\"\r\n                        data={listData}\r\n                        columns={[ \"CustomerName\", \"Address\" , \"BirthDay\", \"NationId\", \"Bookseat\"]}\r\n                      /> : <CircularProgress />\r\n                    }\r\n\r\n                    {/* <Grid container item xs={12} style={{ marginTop: `30px`,}}>\r\n                    <Grid item xs={9}></Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        id=\"dob\"\r\n                        label=\"SumWages\"\r\n                        type=\"text\"\r\n                        value={sumwages}\r\n                        sx={{ width: 200 }}\r\n                        \r\n                        //type=\"variant\"\r\n                        className={classes.input}\r\n                        variant=\"outlined\"\r\n                        disabled={true}\r\n                      />\r\n                    </Grid>\r\n                    </Grid> */}\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                </Widget>\r\n            </Grid>\r\n     </Grid>\r\n     </Grid>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Statistical\\Statistical.js",["372","373"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js",["374","375","376","377","378","379","380","381"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Utils from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nconst data = {\r\n    carNumber: \"\",\r\n    color: \"\",\r\n    manufacturer: \"\",\r\n    lifeCar: \"\",\r\n    numberSeats: \"\",\r\n    dateMantain: \"2022-01-01\",\r\n    yearUse: 3,\r\n    image: \"body?.image\",\r\n};\r\n\r\nfunction NewBus() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [formValues, setFormValues] = useState(data);\r\n\r\n    const handleSaveButton = () => {\r\n        instance.post(AppURL.createBus, {\r\n            ...formValues,\r\n            carNumber: parseInt(formValues.carNumber),\r\n            numberSeats: parseInt(formValues.numberSeats),\r\n            yearUse: parseInt(formValues.yearUse),\r\n            dateMantain: Utils.formatDateShow(formValues.dateMantain)\r\n        })\r\n            .then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Bus Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleSaveButton}\r\n                        >\r\n                            Save\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"carNumber\"\r\n                                            name=\"carNumber\"\r\n                                            label=\"Car Number\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.carNumber}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            label=\"Color\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.color}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"manufacturer\"\r\n                                            name=\"manufacturer\"\r\n                                            label=\"Manufacturer\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.manufacturer}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"lifeCar\"\r\n                                            name=\"lifeCar\"\r\n                                            label=\"Life Car\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.lifeCar}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"numberSeats\"\r\n                                            name=\"numberSeats\"\r\n                                            label=\"Number Seats\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.numberSeats}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"yearUse\"\r\n                                            name=\"yearUse\"\r\n                                            label=\"Year Use\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.yearUse}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"dateMantain\"\r\n                                            label=\"Date Maintain\"\r\n                                            type=\"date\"\r\n                                            sx={{ width: 220 }}\r\n                                            onChange={handleInputChange}\r\n                                            value={Utils.formatDateShow(formValues.dateMantain)}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            name=\"dateMantain\"\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewBus\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js",["382","383","384","385","386","387","388","389","390","391","392"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Utils from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nfunction BusDetail() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const [formValues, setFormValues] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [datemain, setDateMain] = useState(\"\");\r\n    useEffect(() => {\r\n        let url = AppURL.getBus + '/' + id;\r\n        instance.get(url)\r\n            .then(res => {\r\n                if (res?.status === 200) {\r\n                    const body = res?.body;\r\n                    let data = {\r\n                        carNumber: body?.carNumber,\r\n                        color: body?.color,\r\n                        manufacturer: body?.manufacturer,\r\n                        lifeCar: body?.lifeCar,\r\n                        numberSeats: body?.numberSeats,\r\n                        yearUse: body?.yearUse,\r\n                        dateMantain: Utils.formatDateShow(body?.dateMantain),\r\n                    };\r\n                    setFormValues(data);\r\n                    setDateMain(Utils.formatDateShow(body?.dateMantain));\r\n                }\r\n\r\n            })\r\n    }, []);\r\n\r\n    const handleEditButton = () => {\r\n        if (isEditing) {\r\n            let url = AppURL.updateBus + '/' + id;\r\n            instance.put(url, {\r\n                ...formValues,\r\n                carNumber: parseInt(formValues.carNumber),\r\n                numberSeats: parseInt(formValues.numberSeats),\r\n                yearUse: parseInt(formValues.yearUse),\r\n                dateMantain: Utils.formatDateShow(formValues.dateMantain),\r\n            }).then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            }).catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n        }\r\n        setIsEditing(!isEditing);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(\"name\" + e.target.name + \" \" + e.target.value)\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Bus Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleEditButton}\r\n                        >\r\n                            {isEditing ? 'Save' : 'Edit'}\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"carNumber\"\r\n                                            name=\"carNumber\"\r\n                                            label=\"Car Number\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.carNumber}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            label=\"Color\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.color}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"manufacturer\"\r\n                                            name=\"manufacturer\"\r\n                                            label=\"Manufacturer\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.manufacturer}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"lifeCar\"\r\n                                            name=\"lifeCar\"\r\n                                            label=\"Life Car\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.lifeCar}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"numberSeats\"\r\n                                            name=\"numberSeats\"\r\n                                            label=\"Number Seats\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.numberSeats}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"yearUse\"\r\n                                            name=\"yearUse\"\r\n                                            label=\"Year Use\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.yearUse}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"dateMantain\"\r\n                                            label=\"Date Maintain\"\r\n                                            type=\"date\"\r\n                                            value={Utils.formatDateShow(formValues?.dateMantain)}\r\n                                            sx={{ width: 220 }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            onChange={\r\n                                                handleInputChange\r\n                                            }\r\n                                            name=\"dateMantain\"\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BusDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js",["393","394","395","396","397","398","399","400","401","402","403"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Utils from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction DriverDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getDriver + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            nationalId: body?.nationalId,\r\n            name: body?.name,\r\n            codeLicense: body?.codeLicense,\r\n            typeLicense: body?.typeLicense,\r\n            address: body?.address,\r\n            dob: Utils.formatDateShow(body?.dob),\r\n            seniority: body?.seniority,\r\n            image: body?.image,\r\n          };\r\n          setFormValues(data);\r\n          setImageDriver(data.image);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateDriver + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        seniority: parseInt(formValues.seniority),\r\n        salaryId: 1,\r\n        dob: Utils.formatDateShow(formValues.dob),\r\n        image: imageDrvier\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    if(e.target.name === 'image'){\r\n      setImageDriver(\"../\" + e.target.files[0].name);\r\n    }\r\n    const { name, value }  = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      image: \"../Duong-Tuan-Anh1.jpg\",\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [imageDrvier, setImageDriver] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                      <div className=\"MuiFormControl-root MuiTextField-root makeStyles-input-60\">\r\n                        <img src={imageDrvier}\r\n                            variant=\"outlined\"\r\n                            id=\"image\" \r\n                            width=\"200\" height=\"120\" />\r\n                      </div>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                      style={{marginTop: `30px`}}\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      value={Utils.formatDateShow(formValues?.dob)}\r\n                      onChange={handleInputChange}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DriverDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\Charts.js",["404","405","406","407","408","409","410","411","412","413","414"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n  Sector,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport ApexLineChart from \"./components/ApexLineChart\";\r\nimport ApexHeatmap from \"./components/ApexHeatmap\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport instance from \"../../services\";\r\nimport { set } from \"date-fns\";\r\n\r\n// const lineChartData = [\r\n//   {\r\n//     name: \"Week 1\",\r\n//     count: 2000,\r\n//   },\r\n//   {\r\n//     name: \"Week 2\",\r\n//     count: 1398,\r\n//   },\r\n//   {\r\n//     name: \"Week 3\",\r\n//     count: 9800,\r\n//   },\r\n//   {\r\n//     name: \"Week 4\",\r\n//     count: 3908,\r\n//   },\r\n//   {\r\n//     name: \"Week 5\",\r\n//     count: 4800,\r\n//   },\r\n// ];\r\n\r\n\r\nconst pieChartData = [\r\n  { name: \"Group A\", value: 400 },\r\n  { name: \"Group B\", value: 300 },\r\n  { name: \"Group C\", value: 300 },\r\n  { name: \"Group D\", value: 200 },\r\n];\r\n\r\nexport default function Charts(props) {\r\n  var theme = useTheme();\r\n\r\n  const [lineChartData,setLineChartData\r\n    // {\r\n    //   name: \"Week 1\",\r\n    //   count: 2000,\r\n    // },\r\n    // {\r\n    //   name: \"Week 2\",\r\n    //   count: 1398,\r\n    // },\r\n    // {\r\n    //   name: \"Week 3\",\r\n    //   count: 9800,\r\n    // },\r\n    // {\r\n    //   name: \"Week 4\",\r\n    //   count: 3908,\r\n    // },\r\n    // {\r\n    //   name: \"Week 5\",\r\n    //   count: 4800,\r\n    // },\r\n  ] = useState([])\r\n  \r\n  useEffect(() => {\r\n    let url = \"/admin/getCountTripByWeek\";\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const data = res?.body;\r\n          const lineChartData1 = [];\r\n          data.find((element) => {\r\n            lineChartData1.push({\r\n              name: \"Week \" + element.week,\r\n              count: element.count\r\n            })\r\n          });\r\n          setLineChartData(lineChartData1);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n\r\n  // local\r\n  var [activeIndex, setActiveIndexId] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Charts Page - Data Display\" button={\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"secondary\"\r\n        >\r\n          Latest Reports\r\n        </Button>\r\n      } />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\"Chart TripBus for Month\" noBodyPadding upperTitle>\r\n            <ResponsiveContainer width=\"100%\" height={350}>\r\n              <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={lineChartData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"count\"\r\n                  stroke={theme.palette.primary.main}\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                {/* <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"uv\"\r\n                  stroke={theme.palette.secondary.main}\r\n                /> */}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Widget title=\"System management\">\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <img src={\"../sm-tickets-logo.jpg\"}\r\n                                        variant=\"outlined\"\r\n                                        id=\"image\" \r\n                                        width=\"500\" height=\"420\" />\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// ################################################################\r\n\r\nfunction renderActiveShape(props) {\r\n  var RADIAN = Math.PI / 180;\r\n  var {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n  var sin = Math.sin(-RADIAN * midAngle);\r\n  var cos = Math.cos(-RADIAN * midAngle);\r\n  var sx = cx + (outerRadius + 10) * cos;\r\n  var sy = cy + (outerRadius + 10) * sin;\r\n  var mx = cx + (outerRadius + 30) * cos;\r\n  var my = cy + (outerRadius + 30) * sin;\r\n  var ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  var ey = my;\r\n  var textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`count ${value}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\tables\\Tables.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\Maps.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\LineBuses\\index.js",["415"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllLineBus)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(lineBus => {\r\n          let lineBusData = [];\r\n          lineBusData.push(lineBus?.id, lineBus?.firstPoint.address, lineBus?.lastPoint.address, lineBus?.length, lineBus?.complexity);\r\n          return lineBusData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/lineBuses/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteLineBuses, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/lineBuses/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"LineBus List\"\r\n              data={datatableData}\r\n              columns={[\"Code\", \"First Point\", \"Last Point\", \"Length\", \"Complexity\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\Typography.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\index.js",["416"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllBuses)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(bus => {\r\n          let busData = [];\r\n          busData.push(bus?.id, bus?.carNumber, bus?.color, bus?.manufacturer, bus?.lifeCar, bus?.numberSeats, bus?.yearUse, bus?.dateMantain);\r\n          return busData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/buses/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteBuses, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/buses/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Bus List\"\r\n              data={datatableData}\r\n              columns={[\"Code\", \"Car Number\", \"Color\", \"Manufacturer\", \"Life Car\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\index.js",["417"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllDrivers)\r\n      .then(res => {\r\n        console.log(JSON.stringify(res));\r\n        const body = res?.body;\r\n        const data = body.map(driver => {\r\n          let driverData = [];\r\n          driverData.push(driver?.id, driver?.nationalId, driver?.name, driver?.typeLicense, driver?.seniority);\r\n          return driverData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/drivers/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteDrivers, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/drivers/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Driver List\"\r\n              data={datatableData}\r\n              columns={[\"Code\", \"National ID\", \"Name\", \"License\", \"Seniority\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\Icons.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBusAddress\\index.js",["418"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllTripBusAddress)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(tripBusAddress => {\r\n          let tripBusAddressData = [];\r\n          tripBusAddressData.push(tripBusAddress?.id, tripBusAddress?.address);\r\n          return tripBusAddressData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/tripBusAddress/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteTripBusAddresses, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/tripBusAddress/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Trip Bus Address List\"\r\n              data={datatableData}\r\n              columns={[\"Code\", \"Address\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\index.js",["419","420","421","422","423"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function TripBus() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllTripBus)\r\n      .then(res => {\r\n        const listTripBus = res?.body.listTripBus;\r\n        const listTripBusDriver = res?.body.listTripBusDriver;\r\n        const data = listTripBus.map(tripbus => {\r\n          let tripBusData = [];\r\n          let driverId = listTripBusDriver.find(item => item.tripbus.id == tripbus?.id && item.roleCar == '1')?.driver?.id;\r\n          let assitDriverId = listTripBusDriver.find(item => item.tripbus.id == tripbus?.id && item.roleCar == '0')?.driver.id;\r\n          if(!driverId) driverId = \"\";\r\n          const dateTime = new Date(tripbus?.timeTrip).toLocaleString('vi-VI');\r\n          tripBusData.push(tripbus?.id, driverId, assitDriverId, tripbus?.bus.carNumber, tripbus?.bus.color, tripbus.lineBus.firstPoint.address,  tripbus.lineBus.lastPoint.address,  tripbus?.numberGuest, tripbus?.priceTrip, dateTime);\r\n          return tripBusData;\r\n        })\r\n        console.log(data);\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push({\r\n      pathname: `/app/tripbus/${rowData[0]}`,\r\n      state: {\r\n        id: rowData[0],\r\n        driverId: rowData[1],\r\n        assitanceId: rowData[2]\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteTripBus, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/tripbus/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"TripBus List\"\r\n              data={datatableData}\r\n              // columns={[ \"TripBus Code\" ,,\"Assistance Code\",  \"CarNumber\", \"Color\", \"First Point\", \"Last Point\",\"Number of Guest\", \"Trip Price\", \"Trip Time\"]}\r\n              columns = {[\r\n                {\r\n                 name: \"TripBus Code\",\r\n                 options: {\r\n                  display: true\r\n                 }\r\n                },\r\n                {\r\n                  name: \"Driver Code\",\r\n                  options: {\r\n                   display: false\r\n                  }\r\n                 },\r\n                {\r\n                  name: \"Assistance Code\",\r\n                  options: {\r\n                   display: false\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"CarNumber\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"Color\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"First Point\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"Last Point\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"Number of Guest\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"Trip Price\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 },\r\n                 {\r\n                  name: \"Trip Time\",\r\n                  options: {\r\n                   display: true\r\n                  }\r\n                 }\r\n               ]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\Header.js",["424","425"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          SbTickets\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Trung Vu\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://github.com/AwesomeDracula\"\r\n              target=\"_blank\"\r\n            >\r\n              Github account\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js",["426","427","428","429","430","431","432"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  DriveEta as DriveEtaIcon,\r\n  Business as BusEtaIcon,\r\n  TripOrigin as TripOriginIcon,\r\n  Airplay as AirplayIcon\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  // { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  // {\r\n  //   id: 1,\r\n  //   label: \"Typography\",\r\n  //   link: \"/app/typography\",\r\n  //   icon: <TypographyIcon />,\r\n  // },\r\n  // { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"Notifications\",\r\n  //   link: \"/app/notifications\",\r\n  //   icon: <NotificationsIcon />,\r\n  // },\r\n  {\r\n    id: 0,\r\n    label: \"Dashboard\",\r\n    link: \"/app/ui/charts\",\r\n    icon: <HomeIcon />\r\n  },\r\n  { id: 1, type: \"divider\" },\r\n  { id: 2, label: \"Drivers\", link: \"/app/drivers\", icon: <BusEtaIcon/> },\r\n  { id: 3, label: \"Bus\", link: \"/app/buses\", icon: <DriveEtaIcon /> },\r\n  { id: 4, label: \"TripBus\", link: \"/app/tripbus\", icon: <TripOriginIcon/> },\r\n  { id: 5, label: \"Line Buses\", link: \"/app/lineBuses\", icon: <DriveEtaIcon /> },\r\n  { id: 6, label: \"Trip Bus Address\", link: \"/app/tripBusAddress\", icon: <BusEtaIcon/> },\r\n  { id: 7, type: \"divider\" },\r\n  { id: 8, label: \"Statistical Wages\", link: \"/app/statistical\", icon: <TypographyIcon /> },\r\n  { id: 9, label: \"CustomerBookedBus\", link: \"/app/statisticalBookBus\", icon: <AirplayIcon /> },\r\n  { id: 10, label: \"Revenue Bus\", link: \"/app/revenueBus\", icon: <TypographyIcon /> },  \r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\Notification.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\utils\\index.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["433"],"import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\nimport Bus from \"../../../../pages/Bus\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\") return  <Divider className={classes.divider} />;\r\n  if (link && link.includes('http')) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <a className={classes.externalLink} href={link}>\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n        </a>\r\n      </ListItem>\r\n    )\r\n  }\r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        to={link}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={link}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        >\r\n          <List component=\"div\" disablePadding>\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.link}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\mock.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\styles.js",[],{"ruleId":"434","replacedBy":"435"},{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","severity":1,"message":"439","line":16,"column":17,"nodeType":"440","messageId":"441","endLine":16,"endColumn":28},{"ruleId":"438","severity":1,"message":"442","line":28,"column":8,"nodeType":"440","messageId":"441","endLine":28,"endColumn":17},{"ruleId":"443","severity":1,"message":"444","line":72,"column":6,"nodeType":"445","endLine":72,"endColumn":36,"suggestions":"446"},{"ruleId":"443","severity":1,"message":"444","line":78,"column":6,"nodeType":"445","endLine":78,"endColumn":33,"suggestions":"447"},{"ruleId":"438","severity":1,"message":"448","line":1,"column":27,"nodeType":"440","messageId":"441","endLine":1,"endColumn":36},{"ruleId":"438","severity":1,"message":"449","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":32},{"ruleId":"450","severity":1,"message":"451","line":84,"column":45,"nodeType":"452","messageId":"453","endLine":84,"endColumn":59},{"ruleId":"454","severity":1,"message":"455","line":89,"column":49,"nodeType":"456","endLine":92,"endColumn":68},{"ruleId":"438","severity":1,"message":"457","line":5,"column":10,"nodeType":"440","messageId":"441","endLine":5,"endColumn":20},{"ruleId":"438","severity":1,"message":"458","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":28},{"ruleId":"438","severity":1,"message":"449","line":6,"column":22,"nodeType":"440","messageId":"441","endLine":6,"endColumn":32},{"ruleId":"438","severity":1,"message":"459","line":27,"column":12,"nodeType":"440","messageId":"441","endLine":27,"endColumn":20},{"ruleId":"443","severity":1,"message":"460","line":43,"column":8,"nodeType":"445","endLine":43,"endColumn":10,"suggestions":"461"},{"ruleId":"450","severity":1,"message":"451","line":104,"column":45,"nodeType":"452","messageId":"453","endLine":104,"endColumn":59},{"ruleId":"438","severity":1,"message":"449","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":128,"column":49,"nodeType":"464","messageId":"465","endLine":128,"endColumn":56},{"ruleId":"462","severity":1,"message":"463","line":162,"column":50,"nodeType":"464","messageId":"465","endLine":162,"endColumn":57},{"ruleId":"438","severity":1,"message":"457","line":5,"column":10,"nodeType":"440","messageId":"441","endLine":5,"endColumn":20},{"ruleId":"438","severity":1,"message":"458","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":28},{"ruleId":"438","severity":1,"message":"449","line":6,"column":22,"nodeType":"440","messageId":"441","endLine":6,"endColumn":32},{"ruleId":"443","severity":1,"message":"460","line":50,"column":6,"nodeType":"445","endLine":50,"endColumn":8,"suggestions":"466"},{"ruleId":"443","severity":1,"message":"467","line":64,"column":6,"nodeType":"445","endLine":64,"endColumn":8,"suggestions":"468"},{"ruleId":"462","severity":1,"message":"463","line":150,"column":49,"nodeType":"464","messageId":"465","endLine":150,"endColumn":56},{"ruleId":"462","severity":1,"message":"463","line":185,"column":50,"nodeType":"464","messageId":"465","endLine":185,"endColumn":57},{"ruleId":"450","severity":1,"message":"451","line":203,"column":23,"nodeType":"452","messageId":"453","endLine":203,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":215,"column":23,"nodeType":"452","messageId":"453","endLine":215,"endColumn":37},{"ruleId":"438","severity":1,"message":"448","line":1,"column":17,"nodeType":"440","messageId":"441","endLine":1,"endColumn":26},{"ruleId":"438","severity":1,"message":"449","line":7,"column":22,"nodeType":"440","messageId":"441","endLine":7,"endColumn":32},{"ruleId":"438","severity":1,"message":"469","line":14,"column":7,"nodeType":"440","messageId":"441","endLine":14,"endColumn":13},{"ruleId":"438","severity":1,"message":"470","line":21,"column":7,"nodeType":"440","messageId":"441","endLine":21,"endColumn":16},{"ruleId":"438","severity":1,"message":"471","line":34,"column":11,"nodeType":"440","messageId":"441","endLine":34,"endColumn":15},{"ruleId":"438","severity":1,"message":"448","line":1,"column":17,"nodeType":"440","messageId":"441","endLine":1,"endColumn":26},{"ruleId":"438","severity":1,"message":"449","line":7,"column":22,"nodeType":"440","messageId":"441","endLine":7,"endColumn":32},{"ruleId":"438","severity":1,"message":"469","line":16,"column":7,"nodeType":"440","messageId":"441","endLine":16,"endColumn":13},{"ruleId":"438","severity":1,"message":"470","line":23,"column":7,"nodeType":"440","messageId":"441","endLine":23,"endColumn":16},{"ruleId":"438","severity":1,"message":"471","line":37,"column":11,"nodeType":"440","messageId":"441","endLine":37,"endColumn":15},{"ruleId":"438","severity":1,"message":"448","line":1,"column":27,"nodeType":"440","messageId":"441","endLine":1,"endColumn":36},{"ruleId":"438","severity":1,"message":"449","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":32},{"ruleId":"450","severity":1,"message":"451","line":94,"column":23,"nodeType":"452","messageId":"453","endLine":94,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":105,"column":23,"nodeType":"452","messageId":"453","endLine":105,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":116,"column":23,"nodeType":"452","messageId":"453","endLine":116,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":127,"column":23,"nodeType":"452","messageId":"453","endLine":127,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":140,"column":23,"nodeType":"452","messageId":"453","endLine":140,"endColumn":37},{"ruleId":"438","severity":1,"message":"449","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":32},{"ruleId":"462","severity":1,"message":"463","line":192,"column":62,"nodeType":"464","messageId":"465","endLine":192,"endColumn":69},{"ruleId":"462","severity":1,"message":"463","line":227,"column":57,"nodeType":"464","messageId":"465","endLine":227,"endColumn":64},{"ruleId":"450","severity":1,"message":"451","line":296,"column":23,"nodeType":"452","messageId":"453","endLine":296,"endColumn":37},{"ruleId":"443","severity":1,"message":"460","line":56,"column":6,"nodeType":"445","endLine":56,"endColumn":8,"suggestions":"472"},{"ruleId":"462","severity":1,"message":"463","line":236,"column":63,"nodeType":"464","messageId":"465","endLine":236,"endColumn":70},{"ruleId":"462","severity":1,"message":"463","line":268,"column":58,"nodeType":"464","messageId":"465","endLine":268,"endColumn":65},{"ruleId":"450","severity":1,"message":"451","line":288,"column":23,"nodeType":"452","messageId":"453","endLine":288,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":300,"column":23,"nodeType":"452","messageId":"453","endLine":300,"endColumn":37},{"ruleId":"438","severity":1,"message":"473","line":3,"column":3,"nodeType":"440","messageId":"441","endLine":3,"endColumn":8},{"ruleId":"438","severity":1,"message":"474","line":4,"column":3,"nodeType":"440","messageId":"441","endLine":4,"endColumn":11},{"ruleId":"438","severity":1,"message":"475","line":5,"column":3,"nodeType":"440","messageId":"441","endLine":5,"endColumn":12},{"ruleId":"438","severity":1,"message":"476","line":6,"column":3,"nodeType":"440","messageId":"441","endLine":6,"endColumn":12},{"ruleId":"438","severity":1,"message":"477","line":7,"column":3,"nodeType":"440","messageId":"441","endLine":7,"endColumn":12},{"ruleId":"438","severity":1,"message":"478","line":8,"column":3,"nodeType":"440","messageId":"441","endLine":8,"endColumn":7},{"ruleId":"438","severity":1,"message":"479","line":14,"column":3,"nodeType":"440","messageId":"441","endLine":14,"endColumn":12},{"ruleId":"438","severity":1,"message":"449","line":19,"column":22,"nodeType":"440","messageId":"441","endLine":19,"endColumn":32},{"ruleId":"438","severity":1,"message":"480","line":25,"column":10,"nodeType":"440","messageId":"441","endLine":25,"endColumn":33},{"ruleId":"438","severity":1,"message":"481","line":25,"column":35,"nodeType":"440","messageId":"441","endLine":25,"endColumn":45},{"ruleId":"438","severity":1,"message":"482","line":26,"column":8,"nodeType":"440","messageId":"441","endLine":26,"endColumn":20},{"ruleId":"438","severity":1,"message":"483","line":27,"column":10,"nodeType":"440","messageId":"441","endLine":27,"endColumn":15},{"ruleId":"438","severity":1,"message":"469","line":28,"column":7,"nodeType":"440","messageId":"441","endLine":28,"endColumn":13},{"ruleId":"438","severity":1,"message":"484","line":47,"column":9,"nodeType":"440","messageId":"441","endLine":47,"endColumn":16},{"ruleId":"438","severity":1,"message":"485","line":50,"column":22,"nodeType":"440","messageId":"441","endLine":50,"endColumn":35},{"ruleId":"438","severity":1,"message":"486","line":52,"column":10,"nodeType":"440","messageId":"441","endLine":52,"endColumn":18},{"ruleId":"443","severity":1,"message":"487","line":65,"column":6,"nodeType":"445","endLine":65,"endColumn":8,"suggestions":"488"},{"ruleId":"438","severity":1,"message":"471","line":67,"column":9,"nodeType":"440","messageId":"441","endLine":67,"endColumn":13},{"ruleId":"489","severity":1,"message":"490","line":79,"column":34,"nodeType":"491","messageId":"492","endLine":79,"endColumn":36},{"ruleId":"454","severity":1,"message":"455","line":167,"column":25,"nodeType":"456","endLine":170,"endColumn":56},{"ruleId":"438","severity":1,"message":"449","line":13,"column":22,"nodeType":"440","messageId":"441","endLine":13,"endColumn":32},{"ruleId":"438","severity":1,"message":"469","line":21,"column":7,"nodeType":"440","messageId":"441","endLine":21,"endColumn":13},{"ruleId":"438","severity":1,"message":"448","line":1,"column":27,"nodeType":"440","messageId":"441","endLine":1,"endColumn":36},{"ruleId":"438","severity":1,"message":"449","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":32},{"ruleId":"450","severity":1,"message":"451","line":96,"column":45,"nodeType":"452","messageId":"453","endLine":96,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":107,"column":45,"nodeType":"452","messageId":"453","endLine":107,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":118,"column":45,"nodeType":"452","messageId":"453","endLine":118,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":129,"column":45,"nodeType":"452","messageId":"453","endLine":129,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":142,"column":45,"nodeType":"452","messageId":"453","endLine":142,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":153,"column":45,"nodeType":"452","messageId":"453","endLine":153,"endColumn":59},{"ruleId":"438","severity":1,"message":"457","line":5,"column":10,"nodeType":"440","messageId":"441","endLine":5,"endColumn":20},{"ruleId":"438","severity":1,"message":"458","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":28},{"ruleId":"438","severity":1,"message":"449","line":6,"column":22,"nodeType":"440","messageId":"441","endLine":6,"endColumn":32},{"ruleId":"438","severity":1,"message":"459","line":28,"column":12,"nodeType":"440","messageId":"441","endLine":28,"endColumn":20},{"ruleId":"443","severity":1,"message":"460","line":49,"column":8,"nodeType":"445","endLine":49,"endColumn":10,"suggestions":"493"},{"ruleId":"450","severity":1,"message":"451","line":114,"column":45,"nodeType":"452","messageId":"453","endLine":114,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":126,"column":45,"nodeType":"452","messageId":"453","endLine":126,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":138,"column":45,"nodeType":"452","messageId":"453","endLine":138,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":150,"column":45,"nodeType":"452","messageId":"453","endLine":150,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":164,"column":45,"nodeType":"452","messageId":"453","endLine":164,"endColumn":59},{"ruleId":"450","severity":1,"message":"451","line":176,"column":45,"nodeType":"452","messageId":"453","endLine":176,"endColumn":59},{"ruleId":"438","severity":1,"message":"457","line":5,"column":10,"nodeType":"440","messageId":"441","endLine":5,"endColumn":20},{"ruleId":"438","severity":1,"message":"458","line":5,"column":22,"nodeType":"440","messageId":"441","endLine":5,"endColumn":28},{"ruleId":"438","severity":1,"message":"449","line":6,"column":22,"nodeType":"440","messageId":"441","endLine":6,"endColumn":32},{"ruleId":"443","severity":1,"message":"460","line":50,"column":6,"nodeType":"445","endLine":50,"endColumn":8,"suggestions":"494"},{"ruleId":"454","severity":1,"message":"455","line":113,"column":25,"nodeType":"456","endLine":116,"endColumn":56},{"ruleId":"450","severity":1,"message":"451","line":126,"column":23,"nodeType":"452","messageId":"453","endLine":126,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":139,"column":23,"nodeType":"452","messageId":"453","endLine":139,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":151,"column":23,"nodeType":"452","messageId":"453","endLine":151,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":166,"column":23,"nodeType":"452","messageId":"453","endLine":166,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":178,"column":23,"nodeType":"452","messageId":"453","endLine":178,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":205,"column":23,"nodeType":"452","messageId":"453","endLine":205,"endColumn":37},{"ruleId":"438","severity":1,"message":"495","line":9,"column":3,"nodeType":"440","messageId":"441","endLine":9,"endColumn":6},{"ruleId":"438","severity":1,"message":"496","line":10,"column":3,"nodeType":"440","messageId":"441","endLine":10,"endColumn":11},{"ruleId":"438","severity":1,"message":"497","line":20,"column":8,"nodeType":"440","messageId":"441","endLine":20,"endColumn":21},{"ruleId":"438","severity":1,"message":"498","line":21,"column":8,"nodeType":"440","messageId":"441","endLine":21,"endColumn":19},{"ruleId":"438","severity":1,"message":"499","line":24,"column":10,"nodeType":"440","messageId":"441","endLine":24,"endColumn":13},{"ruleId":"438","severity":1,"message":"500","line":50,"column":7,"nodeType":"440","messageId":"441","endLine":50,"endColumn":19},{"ruleId":"462","severity":1,"message":"501","line":91,"column":31,"nodeType":"502","messageId":"503","endLine":91,"endColumn":33},{"ruleId":"438","severity":1,"message":"504","line":104,"column":8,"nodeType":"440","messageId":"441","endLine":104,"endColumn":19},{"ruleId":"438","severity":1,"message":"505","line":104,"column":21,"nodeType":"440","messageId":"441","endLine":104,"endColumn":37},{"ruleId":"454","severity":1,"message":"455","line":159,"column":15,"nodeType":"456","endLine":162,"endColumn":68},{"ruleId":"438","severity":1,"message":"506","line":173,"column":10,"nodeType":"440","messageId":"441","endLine":173,"endColumn":27},{"ruleId":"462","severity":1,"message":"463","line":40,"column":35,"nodeType":"502","messageId":"503","endLine":40,"endColumn":37},{"ruleId":"462","severity":1,"message":"463","line":38,"column":35,"nodeType":"502","messageId":"503","endLine":38,"endColumn":37},{"ruleId":"462","severity":1,"message":"463","line":39,"column":35,"nodeType":"502","messageId":"503","endLine":39,"endColumn":37},{"ruleId":"462","severity":1,"message":"463","line":38,"column":35,"nodeType":"502","messageId":"503","endLine":38,"endColumn":37},{"ruleId":"489","severity":1,"message":"490","line":21,"column":73,"nodeType":"491","messageId":"492","endLine":21,"endColumn":75},{"ruleId":"489","severity":1,"message":"490","line":21,"column":104,"nodeType":"491","messageId":"492","endLine":21,"endColumn":106},{"ruleId":"489","severity":1,"message":"490","line":22,"column":78,"nodeType":"491","messageId":"492","endLine":22,"endColumn":80},{"ruleId":"489","severity":1,"message":"490","line":22,"column":109,"nodeType":"491","messageId":"492","endLine":22,"endColumn":111},{"ruleId":"462","severity":1,"message":"463","line":50,"column":35,"nodeType":"502","messageId":"503","endLine":50,"endColumn":37},{"ruleId":"438","severity":1,"message":"507","line":10,"column":3,"nodeType":"440","messageId":"441","endLine":10,"endColumn":7},{"ruleId":"438","severity":1,"message":"458","line":27,"column":29,"nodeType":"440","messageId":"441","endLine":27,"endColumn":35},{"ruleId":"438","severity":1,"message":"508","line":5,"column":24,"nodeType":"440","messageId":"441","endLine":5,"endColumn":41},{"ruleId":"438","severity":1,"message":"509","line":7,"column":17,"nodeType":"440","messageId":"441","endLine":7,"endColumn":31},{"ruleId":"438","severity":1,"message":"510","line":8,"column":16,"nodeType":"440","messageId":"441","endLine":8,"endColumn":25},{"ruleId":"438","severity":1,"message":"511","line":9,"column":21,"nodeType":"440","messageId":"441","endLine":9,"endColumn":32},{"ruleId":"438","severity":1,"message":"512","line":10,"column":19,"nodeType":"440","messageId":"441","endLine":10,"endColumn":30},{"ruleId":"438","severity":1,"message":"513","line":11,"column":18,"nodeType":"440","messageId":"441","endLine":11,"endColumn":25},{"ruleId":"438","severity":1,"message":"514","line":27,"column":8,"nodeType":"440","messageId":"441","endLine":27,"endColumn":11},{"ruleId":"438","severity":1,"message":"515","line":20,"column":8,"nodeType":"440","messageId":"441","endLine":20,"endColumn":11},"no-native-reassign",["516"],"no-negated-in-lhs",["517"],"no-unused-vars","'TwitterIcon' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'layoutState.message'. Either include it or remove the dependency array.","ArrayExpression",["518"],["519"],"'useEffect' is defined but never used.","'withStyles' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Typography' is defined but never used.","'Button' is defined but never used.","'datemain' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["520"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["521"],"React Hook useEffect has missing dependencies: 'firstId' and 'lastId'. Either include them or remove the dependency array.",["522"],"'states' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'data' is assigned a value but never used.",["523"],"'Table' is defined but never used.","'TableRow' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Chip' is defined but never used.","'TextField' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DatePicker' is defined but never used.","'DateFnsUtils' is defined but never used.","'Image' is defined but never used.","'classes' is assigned a value but never used.","'settimePicker' is assigned a value but never used.","'sumwages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listTripBus'. Either include it or remove the dependency array.",["524"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["525"],["526"],"'Pie' is defined but never used.","'PieChart' is defined but never used.","'ApexLineChart' is defined but never used.","'ApexHeatmap' is defined but never used.","'set' is defined but never used.","'pieChartData' is assigned a value but never used.","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'activeIndex' is assigned a value but never used.","'setActiveIndexId' is assigned a value but never used.","'renderActiveShape' is defined but never used.","'Link' is defined but never used.","'NotificationsIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Bus' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"531","fix":"533"},{"desc":"534","fix":"535"},{"desc":"531","fix":"536"},{"desc":"537","fix":"538"},{"desc":"531","fix":"539"},{"desc":"531","fix":"540"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastSuccess]",{"range":"541","text":"542"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastFail]",{"range":"543","text":"544"},"Update the dependencies array to be: [id]",{"range":"545","text":"546"},{"range":"547","text":"546"},"Update the dependencies array to be: [firstId, lastId]",{"range":"548","text":"549"},{"range":"550","text":"546"},"Update the dependencies array to be: [listTripBus]",{"range":"551","text":"552"},{"range":"553","text":"546"},{"range":"554","text":"546"},[2514,2544],"[layoutState.message, layoutState.showToastSuccess]",[2662,2689],"[layoutState.message, layoutState.showToastFail]",[1593,1595],"[id]",[1743,1745],[2046,2048],"[firstId, lastId]",[2143,2145],[1866,1868],"[listTripBus]",[1947,1949],[1697,1699]]